{"version":3,"sources":["components/Tempapp.jsx","App.js","index.js"],"names":["Tempapp","date","Date","toDateString","time","toLocaleTimeString","useState","ctime","setCtime","setInterval","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resJson","console","log","fetchApi","className","type","onChange","event","target","value","main","temp","weather","src","icon","alt","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MA+DeA,EA5DC,WAAO,IAAD,UACdC,GAAO,IAAIC,MAAOC,eAClBC,GAAO,IAAIF,MAAOG,qBACtB,EAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAKAC,aAJmB,WACfL,GAAO,IAAIF,MAAOG,qBAClBG,EAASJ,KAEU,KAEvB,MAAwBE,mBAAS,MAAjC,mBAAOI,EAAP,KAAaC,EAAb,KACA,EAA4BL,qBAA5B,mBAAOM,EAAP,KAAeC,EAAf,KAcF,OAZEC,qBAAW,YACO,uCAAG,gCAAAC,EAAA,6DACPC,EADO,2DACmDJ,EADnD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,GACZT,EAAQS,GALK,2CAAH,qDAOdG,KACF,CAACX,IAIH,qBAAKY,UAAU,MAAf,SACI,sBAAKA,UAAU,OAAf,UACA,qBAAKA,UAAU,YAAf,SACI,uBAAOC,KAAK,SAASD,UAAU,SAASE,SAAW,SAACC,GAAWd,EAAUc,EAAMC,OAAOC,YAExFnB,EACG,sBAAKc,UAAU,OAAf,UACG,oBAAIA,UAAU,OAAd,SAAsBZ,IACtB,oBAAIY,UAAU,OAAd,SAAsBvB,IACtB,oBAAIuB,UAAU,OAAd,SAAsBjB,IACtB,qBAAKiB,UAAU,QAAf,SACI,sCAAKd,QAAL,IAAKA,GAAL,UAAKA,EAAMoB,YAAX,aAAK,EAAYC,KAAjB,aAEJ,qBAAKP,UAAU,UAAf,UACS,OAAJd,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,UACH,oCAAKtB,QAAL,IAAKA,GAAL,UAAKA,EAAMsB,QAAQ,UAAnB,aAAK,EAAkBF,SAI/B,qBAAKN,UAAU,OAAf,UACK,OAAJd,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,UACC,qBAAKC,IAAG,iDAAsCvB,QAAtC,IAAsCA,GAAtC,UAAsCA,EAAMsB,QAAQ,UAApD,aAAsC,EAAkBE,KAAxD,QAAoEC,IAAI,eAGxF,qBAAKX,UAAU,SAAf,SACI,kDAAcd,QAAd,IAAcA,GAAd,UAAcA,EAAMoB,YAApB,aAAc,EAAYM,SAA1B,4BAAmD1B,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAMoB,YAAzD,aAAmD,EAAYO,SAA/D,iBApBF,oDCxBHC,G,MANH,WACV,OACE,cAAC,EAAD,MCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.47ff5cc1.chunk.js","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\n\nconst Tempapp = () => {\n    let date = new Date().toDateString();\n    let time = new Date().toLocaleTimeString();\n    const [ctime, setCtime] = useState(time);\n    const UpdateTime = () => {\n        time = new Date().toLocaleTimeString();\n        setCtime(time);\n    };\n    setInterval(UpdateTime,1000);\n\n    const [city, setCity] = useState(null);\n    const [search, setSearch] = useState();\n\n    useEffect( () => {\n        const fetchApi = async () => {\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=81b033f920a6fb336c0f77d301b14414`\n            const response = await fetch(url);\n            const resJson = await response.json();\n            console.log(resJson);\n            setCity(resJson);\n        };\n        fetchApi();\n    },[search] )\n\n\n  return (\n    <div className=\"box\">\n        <div className=\"box2\">\n        <div className=\"inputdata\">\n            <input type=\"search\" className=\"inputf\" onChange={ (event) => {setSearch(event.target.value)}  } />\n        </div>\n        {!city ? (<p>No Data Found</p>) : (\n             <div className=\"info\">\n                <h1 className=\"city\">{search}</h1>\n                <h2 className=\"date\">{date}</h2>\n                <h2 className=\"time\">{ctime}</h2>\n                <div className=\"tempt\">\n                    <h1>{city?.main?.temp}°C</h1>\n                </div>\n                <div className=\"weather\">\n                    {city?.weather && (\n                        <h2>{city?.weather[0]?.main}</h2>\n                    )} \n                    \n                </div>\n                <div className=\"icon\">\n                {city?.weather && (\n                        <img src ={`http://openweathermap.org/img/w/${city?.weather[0]?.icon}.png`} alt=\"wthr img\" />\n                    )} \n                </div>\n                <div className=\"limits\">\n                    <h4>Min-Temp {city?.main?.temp_min} °C|| Max-Temp {city?.main?.temp_max} °C</h4>\n                </div>\n             </div>\n        )}\n        </div>\n    </div>\n  );\n}\n\nexport default Tempapp;\n","import React from 'react';\nimport Tempapp from './components/Tempapp';\nimport './style.css';\n\nconst App = () => {\n  return (\n    <Tempapp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}